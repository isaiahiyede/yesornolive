# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityLogger',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('action', models.CharField(max_length=200, null=True, blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('obj_id', models.IntegerField(default=0)),
                ('obj_model_name', models.CharField(max_length=100, null=True, blank=True)),
                ('obj_description', models.CharField(max_length=1000, null=True)),
                ('user', models.ForeignKey(blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['-created_on'],
                'verbose_name_plural': 'ActivityLogger',
            },
        ),
        migrations.CreateModel(
            name='AddressInfo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('address_line1', models.CharField(max_length=300, null=True)),
                ('address_line2', models.CharField(max_length=300, null=True)),
                ('city', models.CharField(max_length=100, null=True)),
                ('state', models.CharField(max_length=50, null=True)),
                ('country', models.CharField(max_length=20, null=True)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('username', models.CharField(max_length=50, null=True, blank=True)),
                ('text', models.CharField(max_length=1000, null=True, blank=True)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('email', models.EmailField(max_length=254, null=True, blank=True)),
                ('approved', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('liked', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-created_on'],
                'verbose_name_plural': 'Comment',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=250, null=True, blank=True)),
                ('category', models.CharField(blank=True, max_length=50, null=True, choices=[(b'', b'Select Category'), (b'Sports', b'Sports'), (b'Entertainment-LifeStyle', b'Entertainment & LifeStyle'), (b'General', b'General'), (b'Politics', b'Politics'), (b'Business-Economy', b'Business & Economy'), (b'realityTV', b'realityTV')])),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.TimeField(default=django.utils.timezone.now)),
                ('end_time', models.TimeField(default=django.utils.timezone.now)),
                ('start_date', models.DateField(null=True, blank=True)),
                ('end_date', models.DateField(null=True, blank=True)),
                ('publish', models.BooleanField(default=False)),
                ('event_image', models.ImageField(null=True, upload_to='media/event/%Y/%M/%d/', blank=True)),
                ('event_msg_body', models.TextField(null=True, blank=True)),
                ('closed', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('event_id', models.CharField(max_length=50, null=True, blank=True)),
                ('bet_question', models.CharField(max_length=250, null=True, blank=True)),
                ('event_decision', models.CharField(blank=True, max_length=5, null=True, choices=[(b'YES', b'YES'), (b'NO', b'NO')])),
                ('validated', models.BooleanField(default=False)),
                ('decided', models.BooleanField(default=False)),
                ('trending', models.BooleanField(default=False)),
                ('published_date', models.DateTimeField(null=True, blank=True)),
                ('counter', models.PositiveIntegerField(default=0)),
                ('total_amt', models.FloatField(default=0.0, max_length=15)),
                ('not_validated_reason', models.TextField(null=True, blank=True)),
                ('estimated_wining', models.PositiveIntegerField(default=0)),
                ('game_ratio', models.CharField(blank=True, max_length=50, null=True, choices=[(b'', b'Select Ratio'), (b'1:1', b'1:1'), (b'1:2', b'1:2'), (b'1:3', b'1:3'), (b'1:4', b'1:4'), (b'2:1', b'2:1'), (b'3:1', b'3:1'), (b'4:1', b'4:1')])),
                ('date_created', models.DateField(null=True, blank=True)),
                ('event_total_value', models.FloatField(default=0.0, max_length=15)),
                ('event_total_winnings', models.FloatField(default=0.0, max_length=15)),
                ('event_total_profit', models.FloatField(default=0.0, max_length=15)),
                ('event_total_stakeholder_amount', models.FloatField(default=0.0, max_length=15)),
                ('event_total_vendor_amount', models.FloatField(default=0.0, max_length=15)),
                ('event_total_jackpot_amount', models.FloatField(default=0.0, max_length=15)),
                ('event_total_users_amount', models.FloatField(default=0.0, max_length=15)),
                ('event_total_amount_won', models.FloatField(default=0.0, max_length=15)),
                ('event_total_players', models.PositiveIntegerField(default=0)),
                ('event_total_winners', models.PositiveIntegerField(default=0)),
                ('event_total_losers', models.PositiveIntegerField(default=0)),
                ('event_total_yes_choice', models.PositiveIntegerField(default=0)),
                ('event_total_no_choice', models.PositiveIntegerField(default=0)),
                ('event_total_yes_amount', models.FloatField(default=0.0, max_length=15)),
                ('event_total_no_amount', models.FloatField(default=0.0, max_length=15)),
                ('event_status', models.BooleanField(default=False)),
                ('realityTV', models.BooleanField(default=False)),
                ('slug', models.SlugField(max_length=500, null=True, blank=True)),
                ('author', models.ForeignKey(blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['-created_on'],
                'verbose_name_plural': 'Event',
            },
        ),
        migrations.CreateModel(
            name='LeaderBoard',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('total_points', models.PositiveIntegerField(default=0)),
                ('start_date', models.DateTimeField(null=True, blank=True)),
                ('end_date', models.DateTimeField(null=True, blank=True)),
                ('date', models.DateTimeField(null=True, blank=True)),
            ],
            options={
                'ordering': ['-total_points', 'date'],
                'verbose_name_plural': 'Leader Board',
            },
        ),
        migrations.CreateModel(
            name='Likes',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('like', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment_obj', models.ForeignKey(blank=True, to='general.Comments', null=True)),
                ('user', models.ForeignKey(blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['-created_on'],
                'verbose_name_plural': 'Likes',
            },
        ),
        migrations.CreateModel(
            name='MessageCenter',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('subject', models.CharField(max_length=150, null=True, blank=True)),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('message', models.TextField()),
                ('no_of_comments', models.IntegerField(default=0)),
                ('new', models.BooleanField(default=True)),
                ('replied', models.BooleanField(default=False)),
                ('replied_on', models.DateTimeField(null=True, blank=True)),
                ('archive', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name_plural': 'Messages',
            },
        ),
        migrations.CreateModel(
            name='MessageCenterComment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('message', models.TextField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('image_obj', models.ImageField(null=True, upload_to='image_obj', blank=True)),
                ('message_obj', models.ForeignKey(blank=True, to='general.MessageCenter', null=True)),
                ('user', models.ForeignKey(blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name_plural': 'Message Center Comments',
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('referrer', models.CharField(max_length=50, null=True, blank=True)),
                ('referal', models.ForeignKey(blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'verbose_name_plural': 'Refferer',
            },
        ),
        migrations.CreateModel(
            name='Replies',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('reply', models.TextField()),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('name', models.CharField(max_length=150, null=True, blank=True)),
                ('email', models.CharField(max_length=150, null=True, blank=True)),
                ('comment_obj', models.ForeignKey(blank=True, to='general.Comments', null=True)),
                ('user', models.ForeignKey(blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['-created_on'],
                'verbose_name_plural': 'Responses',
            },
        ),
        migrations.CreateModel(
            name='TradingAccount',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('user', models.ForeignKey(blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('bank', models.CharField(blank=True, max_length=100, null=True, choices=[(b'', b'Select Bank'), (b'ACCESS BANK', b'ACCESS BANK'), (b'CITIBANK', b'CITIBANK'), (b'DIAMOND BANK', b'DIAMOND BANK'), (b'ECOBANK', b'ECOBANK'), (b'FIDELITY BANK', b'FIDELITY BANK'), (b'FIRST CITY MONUMENT BANK', b'FIRST CITY MONUMENT BANK'), (b'FIRST BANK', b'FIRST BANK'), (b'GUARANTY TRUST BANK', b'GUARANTY TRUST BANK'), (b'HERITAGE BANK', b'HERITAGE BANK'), (b'KEYSTONE BANK', b'KEYSTONE BANK'), (b'SKYE BANK', b'SKYE BANK'), (b'STANBIC IBTC', b'STANBIC IBTC'), (b'STANDARD CHARTERED BANK', b'STANDARD CHARTERED BANK'), (b'STERLING BANK', b'STERLING BANK'), (b'UNION BANK OF NIGERIA', b'UNION BANK OF NIGERIA'), (b'UNITED BANK OF AFRICA', b'UNITED BANK OF AFRICA'), (b'UNITY BANK', b'UNITY BANK'), (b'WEMA BANK', b'WEMA BANK'), (b'ZENITH BANK', b'ZENITH BANK')])),
                ('account_number', models.CharField(max_length=50, null=True, blank=True)),
                ('dob', models.DateField(null=True, blank=True)),
                ('phone_number', models.CharField(max_length=50, null=True, blank=True)),
                ('user_image', models.ImageField(null=True, upload_to='media/user_image/%Y/%M/%d/', blank=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True, choices=[(b'', b'Select Gender'), (b'FEMALE', b'FEMALE'), (b'MALE', b'MALE')])),
                ('deleted', models.BooleanField(default=False)),
                ('profile_updated', models.BooleanField(default=False)),
                ('validator', models.BooleanField(default=False)),
                ('decider', models.BooleanField(default=False)),
                ('content_provider', models.BooleanField(default=False)),
                ('accounts', models.BooleanField(default=False)),
                ('special_user', models.BooleanField(default=False)),
                ('referal_link', models.CharField(max_length=100, null=True, blank=True)),
                ('trader', models.BooleanField(default=False)),
                ('trading_account', models.BooleanField(default=False)),
                ('data_analyst', models.BooleanField(default=False)),
                ('dev', models.BooleanField(default=False)),
                ('vendor', models.BooleanField(default=False)),
                ('vendor_code', models.CharField(max_length=50, null=True, blank=True)),
                ('trader_code', models.PositiveIntegerField(default=0)),
                ('adminRealityTV', models.BooleanField(default=False)),
                ('in_house', models.BooleanField(default=False)),
                ('special_user_test', models.BooleanField(default=False)),
                ('total_djp_played', models.PositiveIntegerField(default=0)),
                ('total_djp_won', models.PositiveIntegerField(default=0)),
                ('total_djp_grand_prize_won', models.PositiveIntegerField(default=0)),
                ('total_djp_consolation_prize_won', models.PositiveIntegerField(default=0)),
                ('total_wjp_won', models.PositiveIntegerField(default=0)),
                ('total_wjp_grand_prize_won', models.PositiveIntegerField(default=0)),
                ('total_wjp_consolation_prize_won', models.PositiveIntegerField(default=0)),
                ('total_cat_games_played', models.PositiveIntegerField(default=0)),
                ('djp_wjp_cat', models.BooleanField(default=False)),
                ('wallet_balance', models.CharField(max_length=20, null=True, blank=True)),
                ('referred_by', models.ForeignKey(blank=True, to='general.Referral', null=True)),
                ('user', models.OneToOneField(null=True, blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_on'],
                'verbose_name_plural': 'UserAccount',
            },
        ),
        migrations.CreateModel(
            name='VendorClient',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('client_code', models.CharField(max_length=20, null=True, blank=True)),
                ('phone_number', models.CharField(max_length=50, unique=True, null=True, blank=True)),
                ('useraccount', models.ForeignKey(blank=True, to='general.UserAccount', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WalletBalances',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('current_bal', models.FloatField(default=0.0, null=True, blank=True)),
                ('amount', models.FloatField(default=0.0, null=True, blank=True)),
                ('balance_bf', models.FloatField(default=0.0, null=True, blank=True)),
                ('description', models.CharField(max_length=50, null=True, blank=True)),
                ('user', models.ForeignKey(blank=True, to='general.UserAccount', null=True)),
            ],
            options={
                'verbose_name_plural': 'Wallet Balance',
            },
        ),
        migrations.AddField(
            model_name='leaderboard',
            name='user_obj',
            field=models.ForeignKey(blank=True, to='general.UserAccount', null=True),
        ),
        migrations.AddField(
            model_name='comments',
            name='event',
            field=models.ForeignKey(blank=True, to='general.Event', null=True),
        ),
        migrations.AddField(
            model_name='comments',
            name='user',
            field=models.ForeignKey(blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='addressinfo',
            name='user_account',
            field=models.ForeignKey(to='general.UserAccount', null=True),
        ),
    ]
